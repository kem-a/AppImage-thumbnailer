#!/bin/bash
inFile="$(realpath "$1")"
outFile="$(realpath -m "$2")"
size="$3"

# Get the offset where the filesystem starts
offset=$(grep -abom1 $'\x42\x5a\x68\x39' "$inFile" | cut -d: -f1)
if [[ -z "$offset" ]]; then
    offset=$(grep -abom1 $'\x28\xcd\x28\xcd' "$inFile" | cut -d: -f1)
fi

if [[ -z "$offset" ]]; then
    echo "Failed to find filesystem offset in AppImage."
    exit 1
fi

echo "Found filesystem at offset: $offset"

# Calculate block size and skip blocks for dd
block_size=512
skip_blocks=$((offset / block_size))
skip_bytes=$((offset % block_size))

# Extract .DirIcon from AppImage using optimized dd
echo "Extracting .DirIcon from AppImage..."
thumb=$(dd if="$inFile" bs=$block_size skip=$skip_blocks status=none 2>/dev/null | \
       dd bs=1 skip=$skip_bytes status=none 2>/dev/null | \
       bsdtar -tf - '.DirIcon' 2>/dev/null)

if [[ -z "$thumb" ]]; then
    echo "Failed to extract .DirIcon from AppImage."
    exit 1
fi

while true; do
    echo "Testing icon: $thumb"
    # Extract the icon file using optimized dd
    icon_data=$(dd if="$inFile" bs=$block_size skip=$skip_blocks status=none 2>/dev/null | \
                dd bs=1 skip=$skip_bytes status=none 2>/dev/null | \
                bsdtar -xOf - "$thumb" 2>/dev/null | base64)
    
    if [[ -n "$icon_data" ]]; then
        echo "Icon found: $thumb"
        echo "$icon_data" | base64 -d | magick - -background none -resize "$size" "$outFile"
        if [[ $? -ne 0 ]]; then
            echo "Failed to create thumbnail using ImageMagick."
            exit 1
        fi
        break
    elif [[ -L "$thumb" ]]; then
        thumb_path=$(dd if="$inFile" bs=$block_size skip=$skip_blocks status=none 2>/dev/null | \
                    dd bs=1 skip=$skip_bytes status=none 2>/dev/null | \
                    bsdtar -xOf - "$thumb" 2>/dev/null | readlink -f)
        thumb="$thumb_path"
    else
        echo "Icon file not found: $thumb"
        exit 1
    fi
done

echo "Thumbnail created successfully and saved to $outFile"